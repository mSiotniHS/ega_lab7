#+TITLE: Отчёт по лабораторной работе №7
#+SUBTITLE: Артём Абрамян, 382007-1
#+AUTHOR: Артём Абрамян
#+LANGUAGE: ru
#+OPTIONS: toc:nil author:nil date:nil timestamp:nil
#+HTML_HEAD: <style>:root{ font-family: "IBM Plex Sans"; line-height: 1.5;} pre{font-family: "Iosevka";font-size:13px;} .src{ background-color: #3c3c3c; color: white }</style>

* Блок-схема алгоритма

#+ATTR_HTML: :width 60%
[[./flowchart.png]]

* Результаты запусков

** Задача 5 предметов

| Номер | Ценность | Вес |
|-------+----------+-----|
|     0 |        7 |   4 |
|     1 |        5 |   2 |
|     2 |        3 |   1 |
|     3 |        6 |   5 |
|     4 |        2 |   1 |

Вместительность рюкзака: 10.

*** Запуск

#+BEGIN_src
> Итерация №1 | Текущий набор: [0 0 0 0 0]
              | Вес/вместимость: 0/10
> Наиболее ценный предмет: (Value: 7, Weight: 4), №0
> Можем положить в ранец. Тогда 4/10

> Итерация №2 | Текущий набор: [1 0 0 0 0]
              | Вес/вместимость: 4/10
> Наиболее ценный предмет: (Value: 6, Weight: 5), №3
> Можем положить в ранец. Тогда 9/10

> Итерация №3 | Текущий набор: [1 0 0 1 0]
              | Вес/вместимость: 9/10
> Наиболее ценный предмет: (Value: 5, Weight: 2), №1
> Не можем положить в ранец

Решение: [1 0 0 1 0], ценность: 13
#+END_src

** Задача 15 предметов

| Номер | Ценность | Вес |
|-------+----------+-----|
|     0 |        7 |   4 |
|     1 |        5 |   2 |
|     2 |        3 |   1 |
|     3 |        6 |   5 |
|     4 |        2 |   1 |
|     5 |        1 |   2 |
|     6 |        4 |   3 |
|     7 |        8 |   6 |
|     8 |        3 |   2 |
|     9 |        2 |   3 |
|    10 |       10 |   7 |
|    11 |        9 |   9 |
|    12 |        6 |   6 |
|    13 |        3 |   5 |
|    14 |        5 |   4 |

Вместительность рюкзака: 30.

*** Запуск

#+BEGIN_src
> Итерация №1 | Текущий набор: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 0/30
> Наиболее ценный предмет: (Value: 10, Weight: 7), №10
> Можем положить в ранец. Тогда 7/30

> Итерация №2 | Текущий набор: [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
              | Вес/вместимость: 7/30
> Наиболее ценный предмет: (Value: 9, Weight: 9), №11
> Можем положить в ранец. Тогда 16/30

> Итерация №3 | Текущий набор: [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
              | Вес/вместимость: 16/30
> Наиболее ценный предмет: (Value: 8, Weight: 6), №7
> Можем положить в ранец. Тогда 22/30

> Итерация №4 | Текущий набор: [0 0 0 0 0 0 0 1 0 0 1 1 0 0 0]
              | Вес/вместимость: 22/30
> Наиболее ценный предмет: (Value: 7, Weight: 4), №0
> Можем положить в ранец. Тогда 26/30

> Итерация №5 | Текущий набор: [1 0 0 0 0 0 0 1 0 0 1 1 0 0 0]
              | Вес/вместимость: 26/30
> Наиболее ценный предмет: (Value: 6, Weight: 5), №3
> Не можем положить в ранец

Решение: [1 0 0 0 0 0 0 1 0 0 1 1 0 0 0], ценность: 34
#+END_src

* Выводы

Алгоритм, хотя и, кажется, работает "логично" (в том смысле, что берёт самые ценные предметы), не находит достаточно
оптимальное решение. Например, в задаче с пятнадцатью предметами на втором шаге алгоритм взял в набор предмет
с ценностью 9 и весом 9 --- в принципе, выгоднее было бы взять, например, предметы №1 и №3.

Стоит также отметить, что алгоритм остановится, как только ему не удастся поместить очередной предмет
в рюкзак. Алгоритм можно улучшить --- просто будем пытаться положить в рюкзак следующий предмет
с наибольшей ценностью. Получаемые решения будут лучше, но проблема, описанная выше, останется. 

* Исходный код

Программа написана на C# 10 (.NET 6).

** Item.cs

Задаёт структуру для хранения информации о предмете.

#+INCLUDE: "../Item.cs" src csharp

** GreedyMethod.cs

Реализует жадный алгоритм решения ЗоР.

#+INCLUDE: "../GreedyMethod.cs" src csharp

** Program.cs

#+INCLUDE: "../Program.cs" src csharp
